import os
import random
import math

# number of training data / person as generated by counts.py
COUNTS = [127, 176, 138, 657, 155, 182, 200, 314, 294, 303, 297, 387]

def softmax(i, counts):
    denom = sum(map(math.exp, counts))
    return math.exp(counts[i]) / denom

def make_dist(arr):

    dist_cutoffs = [0 for x in arr]
    y = 0
    i = 0
    for x in arr:
        y += x
        dist_cutoffs[i] = y
        i += 1
    return dist_cutoffs

def make_guess(dist):
    num = random.random()
    i = 0
    for x in dist:
        if num < x:
            return i
        i += 1
    return i

softmaxed_guess = [softmax(x, COUNTS) for x in range(12)]
linear_guess = [x / sum(COUNTS) for x in COUNTS]

softmax_dist = make_dist(softmaxed_guess)
linear_dist = make_dist(linear_guess)

total = 0
candidate = 0
softmax_correct = 0
linear_correct = 0
for filename in os.listdir('C:\\Users\\usr1\\python\\final project\\merged-filtered-candidate-data\\tokenized\\testing'):
    f = open('C:\\Users\\usr1\\python\\final project\\merged-filtered-candidate-data\\tokenized\\testing\\' + filename)
    for line in f.readlines():
        total += 1
        if (make_guess(softmax_dist) == candidate):
            softmax_correct += 1
        if (make_guess(linear_dist) == candidate):
            linear_correct += 1
    candidate += 1

print('Linear model correctly guessed', linear_correct, '/', total)
print('Softmax model correctly guessed', softmax_correct, '/', total)